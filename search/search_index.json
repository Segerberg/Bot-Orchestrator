{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bot-Orchestrator Bot-Orchestrator is a suite that offers the following resources to research programs wanting to study networks in laboratory experiments: The application allows researchers to add bots to a video conference to increase the perceived number of participants in a test session. Individual bots can send text messages via a chat function during the video conference. research programs can manipulate the current messaging feature to induce psychological variables or create different social situations of interest. The Bot-Orchestrator software was developed for use in research funded by the United States High-Value Detainee Interrogation Group Contract 15F06720C0002022 awarded to David Neequaye and the University of Gothenburg. Statements of fact, opinion, and analysis in this work are those of the authors and do not reflect the official policy or position of the Federal Bureau of Investigation or the United States Government.","title":"Bot-Orchestrator"},{"location":"#bot-orchestrator","text":"Bot-Orchestrator is a suite that offers the following resources to research programs wanting to study networks in laboratory experiments: The application allows researchers to add bots to a video conference to increase the perceived number of participants in a test session. Individual bots can send text messages via a chat function during the video conference. research programs can manipulate the current messaging feature to induce psychological variables or create different social situations of interest. The Bot-Orchestrator software was developed for use in research funded by the United States High-Value Detainee Interrogation Group Contract 15F06720C0002022 awarded to David Neequaye and the University of Gothenburg. Statements of fact, opinion, and analysis in this work are those of the authors and do not reflect the official policy or position of the Federal Bureau of Investigation or the United States Government.","title":"Bot-Orchestrator"},{"location":"installation/","text":"Installation Jitsi Bot-Orchestrator uses jitsi as backend for conference calls. Please refer to jitsi documentation for how to set up a self-hosted instance Deployment Bot-Orchestrator was deployed to production on University of Gothenburgs openshift platform. Secure communication setting like TSL and CORS are configured with openshift routing. Please see openshift docs for routing setup. Other deployment options are of course possible. Run locally with docker First clone the repository: git clone https://github.com/Segerberg/Bot-Orchestrator.git and navigate to the cloned project: cd Bot-Orchestrator then build the image by running: docker build -t bots:latest . Spin it up by running: docker run --name bots -d -p 8000:5000 -e SECRET_KEY=my_very_secret_key --rm bots:latest Point your browser at http://127.0.0.1:8000 Environment variables Environment variables can be set either by .env or .flaskenv if you run dev or non docker deployment. The DOMAIN ENV is used to point out the domain name(s) for the jitsi instance(s) that should be used SECRET_KEY = 'A long random string' DOMAINS = 'my.first.jtisi.com,my.second.jitsi.com' Installation scripts create_user.py is used to create system users. Execute python create_user.py and fill in username and password when prompted. install_default_bots.py is used to batch load the system with bots. The script takes a csv-file as input with the following columns name,year_of_birth,sex Execute python install_default_bots.py bots.csv","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#jitsi","text":"Bot-Orchestrator uses jitsi as backend for conference calls. Please refer to jitsi documentation for how to set up a self-hosted instance","title":"Jitsi"},{"location":"installation/#deployment","text":"Bot-Orchestrator was deployed to production on University of Gothenburgs openshift platform. Secure communication setting like TSL and CORS are configured with openshift routing. Please see openshift docs for routing setup. Other deployment options are of course possible.","title":"Deployment"},{"location":"installation/#run-locally-with-docker","text":"First clone the repository: git clone https://github.com/Segerberg/Bot-Orchestrator.git and navigate to the cloned project: cd Bot-Orchestrator then build the image by running: docker build -t bots:latest . Spin it up by running: docker run --name bots -d -p 8000:5000 -e SECRET_KEY=my_very_secret_key --rm bots:latest Point your browser at http://127.0.0.1:8000","title":"Run locally with docker"},{"location":"installation/#environment-variables","text":"Environment variables can be set either by .env or .flaskenv if you run dev or non docker deployment. The DOMAIN ENV is used to point out the domain name(s) for the jitsi instance(s) that should be used SECRET_KEY = 'A long random string' DOMAINS = 'my.first.jtisi.com,my.second.jitsi.com'","title":"Environment variables"},{"location":"installation/#installation-scripts","text":"create_user.py is used to create system users. Execute python create_user.py and fill in username and password when prompted. install_default_bots.py is used to batch load the system with bots. The script takes a csv-file as input with the following columns name,year_of_birth,sex Execute python install_default_bots.py bots.csv","title":"Installation scripts"},{"location":"user_manual/","text":"User guide Setting up calls Login Before you can use the application you need to have an user-account. If you didn't set up the system on your own, please ask your system administrator to set up an account. Instructions for adding users can be found in the installation documentation . Calls Once logged in to the application the main application window lists all scheduled calls. Adding new calls is done from the action menu. When clicked a form will be presented in a modal window where you fill in a title for the call and select the jitsi service that will host the actual video call. Instructions for adding jitsi services can be found in the Environment variables part of the installation documentation. Note The naming of the calls in this example is just a suggestion. The naming of the calls can be totally arbitrary. So you can use any convention that will work for your needs. By clicking either the \"view\" button or the calls title will open the detail view for the call. Call detail view From the detail views action menu bots can be added. When clicked a form for adding bots will be presented in a modal window. The add bot form takes the following arguments: Number of bots to genarate Year of birth start/end (Used to filter bots that fall in a range of years) Gender Generate random participant ids (If checked the application will add some random alphanumeric numbers to the botnames) Note If you're not satisfied with the randomization of the bots you can delete them by clicking the trash icon. For copying the link to the call for distribution to participants click the Jitsi Link button. The link will then be saved in your clipboard and can be pasted into an email. Starting a call Start the call by clicking Open meeting in the action menu Bot puppeteer view The bot puppeteer view will open a call for each bot in separate frames. Within each frame there's a drop down list with predefined chat messages that can be sent But it is of course possible to send any text message using the field above the dropdown. Adding predefined messages is done in settings which is found under the main applications action menu. Note See documentation for Settings From the action menu there are two quick functions one for toggling the chat windows of jitsi and one for disconnecting all the bots with one click which can be used to simulate a breakout room (A function that is not available in jitsi ) Participant view The conference call as seen by the participant. Settings Application settings is accessed from the main applications action menu. On the settings page you can add the predefined messages that can be used by the bot puppeteer. You can also manually add bot names that are going to be used for the random selection when you add them to a call.","title":"User manual"},{"location":"user_manual/#user-guide","text":"","title":"User guide"},{"location":"user_manual/#setting-up-calls","text":"","title":"Setting up calls"},{"location":"user_manual/#login","text":"Before you can use the application you need to have an user-account. If you didn't set up the system on your own, please ask your system administrator to set up an account. Instructions for adding users can be found in the installation documentation .","title":"Login"},{"location":"user_manual/#calls","text":"Once logged in to the application the main application window lists all scheduled calls. Adding new calls is done from the action menu. When clicked a form will be presented in a modal window where you fill in a title for the call and select the jitsi service that will host the actual video call. Instructions for adding jitsi services can be found in the Environment variables part of the installation documentation. Note The naming of the calls in this example is just a suggestion. The naming of the calls can be totally arbitrary. So you can use any convention that will work for your needs. By clicking either the \"view\" button or the calls title will open the detail view for the call.","title":"Calls"},{"location":"user_manual/#call-detail-view","text":"From the detail views action menu bots can be added. When clicked a form for adding bots will be presented in a modal window. The add bot form takes the following arguments: Number of bots to genarate Year of birth start/end (Used to filter bots that fall in a range of years) Gender Generate random participant ids (If checked the application will add some random alphanumeric numbers to the botnames) Note If you're not satisfied with the randomization of the bots you can delete them by clicking the trash icon. For copying the link to the call for distribution to participants click the Jitsi Link button. The link will then be saved in your clipboard and can be pasted into an email.","title":"Call detail view"},{"location":"user_manual/#starting-a-call","text":"Start the call by clicking Open meeting in the action menu","title":"Starting a call"},{"location":"user_manual/#bot-puppeteer-view","text":"The bot puppeteer view will open a call for each bot in separate frames. Within each frame there's a drop down list with predefined chat messages that can be sent But it is of course possible to send any text message using the field above the dropdown. Adding predefined messages is done in settings which is found under the main applications action menu. Note See documentation for Settings From the action menu there are two quick functions one for toggling the chat windows of jitsi and one for disconnecting all the bots with one click which can be used to simulate a breakout room (A function that is not available in jitsi )","title":"Bot puppeteer view"},{"location":"user_manual/#participant-view","text":"The conference call as seen by the participant.","title":"Participant view"},{"location":"user_manual/#settings","text":"Application settings is accessed from the main applications action menu. On the settings page you can add the predefined messages that can be used by the bot puppeteer. You can also manually add bot names that are going to be used for the random selection when you add them to a call.","title":"Settings"}]}